import os
import logging
from dotenv import load_dotenv

# –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–∏—Å—Ç–µ–º–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –µ—Å–ª–∏ –æ–Ω–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
if "TELEGRAM_TOKEN" in os.environ:
    del os.environ["TELEGRAM_TOKEN"]

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env —Å –ø—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–π –ø–µ—Ä–µ–∑–∞–ø–∏—Å—å—é
load_dotenv(override=True)

# –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É .env
env_path = os.path.join(os.getcwd(), '.env')

# –Ø–≤–Ω–æ —á–∏—Ç–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ —Ñ–∞–π–ª–∞
with open(env_path, 'r') as f:
    for line in f:
        if line.startswith('TELEGRAM_TOKEN='):
            TOKEN = line.strip().split('=', 1)[1]
            break

print(f"–ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π —Ç–æ–∫–µ–Ω: {TOKEN}")
WEBAPP_URL = os.getenv("WEBAPP_URL", "https://your-webapp-url.com")

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)

from telegram import Update, ReplyKeyboardMarkup, KeyboardButton, WebAppInfo
from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes, CallbackQueryHandler
import database as db
from datetime import datetime

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
db.init_db()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user = update.effective_user
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    db.save_user(
        user.id, 
        user.username, 
        user.first_name, 
        user.last_name
    )
    
    # –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    balance = db.get_user_balance(user.id)
    
    await update.message.reply_html(
        f"–ü—Ä–∏–≤–µ—Ç, {user.mention_html()}! –Ø –ò–ò-—Å—Ç–∏–ª–∏—Å—Ç <b>–°—Ç–∏–ª—å AI</b>.\n\n"
        f"–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ –æ–¥–µ–∂–¥—ã, –∏ —è –¥–∞–º –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å—Ç–∏–ª—é.\n\n"
        f"–í–∞—à –±–∞–ª–∞–Ω—Å: {balance} –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π",
        reply_markup=get_main_keyboard()
    )

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —Å –∫–Ω–æ–ø–∫–∞–º–∏
def get_main_keyboard():
    keyboard = [
        [KeyboardButton("–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é", web_app=WebAppInfo(url=WEBAPP_URL))],
        [KeyboardButton("–ú–æ–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏"), KeyboardButton("–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å")],
        [KeyboardButton("–û —Å–µ—Ä–≤–∏—Å–µ"), KeyboardButton("–ü–æ–¥–¥–µ—Ä–∂–∫–∞")]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
async def text_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    text = update.message.text
    user_id = update.effective_user.id
    
    if text == "–û —Å–µ—Ä–≤–∏—Å–µ":
        stats = db.get_stats()
        await update.message.reply_html(
            "üåü <b>–°—Ç–∏–ª—å AI</b> - –≤–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π —Å—Ç–∏–ª–∏—Å—Ç –Ω–∞ –±–∞–∑–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç–∞.\n\n"
            "–ß—Ç–æ —è —É–º–µ—é:\n"
            "‚Ä¢ –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–µ–¥–º–µ—Ç—ã –æ–¥–µ–∂–¥—ã –ø–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏\n"
            "‚Ä¢ –î–∞–≤–∞—Ç—å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å–æ—á–µ—Ç–∞–Ω–∏—é —Å –¥—Ä—É–≥–∏–º–∏ –≤–µ—â–∞–º–∏\n"
            "‚Ä¢ –ü–æ–¥–±–∏—Ä–∞—Ç—å –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã –∏ –¥–æ–ø–æ–ª–Ω–µ–Ω–∏—è –∫ –æ–±—Ä–∞–∑—É\n"
            "‚Ä¢ –°–æ–≤–µ—Ç–æ–≤–∞—Ç—å, –ø–æ–¥—Ö–æ–¥–∏—Ç –ª–∏ –≤–µ—â—å –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Å–ª—É—á–∞—è\n\n"
            f"üìä <b>–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:</b>\n"
            f"‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats['total_users']}\n"
            f"‚Ä¢ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π: {stats['total_consultations']}\n"
            f"‚Ä¢ –ó–∞ —Å–µ–≥–æ–¥–Ω—è: {stats['daily_consultations']}"
        )
    elif text == "–ü–æ–¥–¥–µ—Ä–∂–∫–∞":
        await update.message.reply_text(
            "–ï—Å–ª–∏ —É –≤–∞—Å –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã, –Ω–∞–ø–∏—à–∏—Ç–µ –Ω–∞–º –Ω–∞ –ø–æ—á—Ç—É:\n"
            "support@example.com\n\n"
            "–ú—ã –ø–æ—Å—Ç–∞—Ä–∞–µ–º—Å—è –æ—Ç–≤–µ—Ç–∏—Ç—å –≤ —Ç–µ—á–µ–Ω–∏–µ 24 —á–∞—Å–æ–≤."
        )
    elif text == "–ú–æ–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏":
        consultations = db.get_user_consultations(user_id)
        
        if not consultations:
            await update.message.reply_text("–£ –≤–∞—Å –ø–æ–∫–∞ –Ω–µ—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π.")
            return
        
        message = "–í–∞—à–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏:\n\n"
        for c in consultations:
            date = datetime.fromisoformat(c['created_at']).strftime("%d.%m.%Y %H:%M")
            message += f"üîπ {date} - {c['occasion']} (ID: {c['id']})\n"
        
        message += "\n–î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–ª–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /consultation ID"
        
        await update.message.reply_text(message)
    elif text == "–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å":
        # –°–æ–∑–¥–∞–µ–º –∏–Ω–ª–∞–π–Ω-–∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–∞–∫–µ—Ç–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π
        keyboard = [
            [
                InlineKeyboardButton("1 –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è - 299‚ÇΩ", callback_data="buy_1"),
                InlineKeyboardButton("3 –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ - 799‚ÇΩ", callback_data="buy_3")
            ],
            [
                InlineKeyboardButton("5 –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π - 1299‚ÇΩ", callback_data="buy_5"),
                InlineKeyboardButton("10 –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π - 2499‚ÇΩ", callback_data="buy_10")
            ]
        ]
        
        await update.message.reply_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–∫–µ—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π:",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
    else:
        await update.message.reply_text(
            "–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –æ–¥–µ–∂–¥—ã –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é¬ª."
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
async def photo_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.effective_user.id
    balance = db.get_user_balance(user_id)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if balance <= 0:
        keyboard = [
            [InlineKeyboardButton("–ü–æ–ø–æ–ª–Ω–∏—Ç—å –±–∞–ª–∞–Ω—Å", callback_data="add_balance")]
        ]
        
        await update.message.reply_text(
            "–£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –Ω–∞ –±–∞–ª–∞–Ω—Å–µ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.\n"
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø–æ–ª–Ω–∏—Ç–µ –±–∞–ª–∞–Ω—Å.",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )
        return
    
    # –ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª —Å –Ω–∞–∏–ª—É—á—à–∏–º –∫–∞—á–µ—Å—Ç–≤–æ–º
    photo_file = await update.message.photo[-1].get_file()
    
    # –°–æ–∑–¥–∞–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
    os.makedirs("user_photos", exist_ok=True)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É
    file_path = f"user_photos/{user_id}_{datetime.now().strftime('%Y%m%d%H%M%S')}.jpg"
    
    # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–æ—Ç–æ
    await photo_file.download_to_drive(file_path)
    
    # –£–º–µ–Ω—å—à–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    db.update_user_balance(user_id, -1)
    
    # –í—Ä–µ–º–µ–Ω–Ω–∞—è –∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
    advice = """
    # –ê–Ω–∞–ª–∏–∑ –≤–∞—à–µ–π –æ–¥–µ–∂–¥—ã

    ## –û–ø–∏—Å–∞–Ω–∏–µ
    –ù–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∞ –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∞—è –±–µ–ª–∞—è –±–ª—É–∑–∞ —Å V-–æ–±—Ä–∞–∑–Ω—ã–º –≤—ã—Ä–µ–∑–æ–º –∏ –¥–ª–∏–Ω–Ω—ã–º–∏ —Ä—É–∫–∞–≤–∞–º–∏. –ú–∞—Ç–µ—Ä–∏–∞–ª –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫ –ª–µ–≥–∫–∏–π —Ö–ª–æ–ø–æ–∫ –∏–ª–∏ —à–µ–ª–∫–æ–≤–∞—è —Å–º–µ—Å—å.

    ## –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Å–æ—á–µ—Ç–∞–Ω–∏—é
    - **–î–ª—è —Ä–∞–±–æ—Ç—ã/–æ—Ñ–∏—Å–∞**: –°–æ—á–µ—Ç–∞–π—Ç–µ —Å –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–º–∏ –±—Ä—é–∫–∞–º–∏ –∏–ª–∏ —é–±–∫–æ–π-–∫–∞—Ä–∞–Ω–¥–∞—à —Ç–µ–º–Ω–æ-—Å–∏–Ω–µ–≥–æ –∏–ª–∏ —á–µ—Ä–Ω–æ–≥–æ —Ü–≤–µ—Ç–∞.
    - **–î–ª—è –ø–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –æ–±—Ä–∞–∑–∞**: –ü–æ–¥–æ–π–¥—É—Ç –¥–∂–∏–Ω—Å—ã –∏–ª–∏ —Ü–≤–µ—Ç–Ω—ã–µ –±—Ä—é–∫–∏, –º–æ–∂–Ω–æ –∑–∞–ø—Ä–∞–≤–∏—Ç—å –±–ª—É–∑—É –∏–ª–∏ –æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞–≤—ã–ø—É—Å–∫.
    - **–î–ª—è –≤–µ—á–µ—Ä–Ω–µ–≥–æ –≤—ã—Ö–æ–¥–∞**: –ö–æ–º–±–∏–Ω–∏—Ä—É–π—Ç–µ —Å —ç–ª–µ–≥–∞–Ω—Ç–Ω–æ–π —é–±–∫–æ–π –º–∏–¥–∏ –∏–ª–∏ —É–∑–∫–∏–º–∏ –±—Ä—é–∫–∞–º–∏ –∏ –¥–æ–±–∞–≤—å—Ç–µ —è—Ä–∫–∏–µ –∞–∫—Å–µ—Å—Å—É–∞—Ä—ã.

    ## –°–æ–≤–µ—Ç—ã –ø–æ –∞–∫—Å–µ—Å—Å—É–∞—Ä–∞–º
    - –î–æ–±–∞–≤—å—Ç–µ –æ–∂–µ—Ä–µ–ª—å–µ —Å—Ä–µ–¥–Ω–µ–π –¥–ª–∏–Ω—ã, –∫–æ—Ç–æ—Ä–æ–µ –±—É–¥–µ—Ç —Ö–æ—Ä–æ—à–æ —Å–º–æ—Ç—Ä–µ—Ç—å—Å—è —Å V-–æ–±—Ä–∞–∑–Ω—ã–º –≤—ã—Ä–µ–∑–æ–º
    - –≠–ª–µ–≥–∞–Ω—Ç–Ω—ã–µ —Å–µ—Ä—å–≥–∏ –ø–æ–¥—á–µ—Ä–∫–Ω—É—Ç –æ–±—Ä–∞–∑
    - –î–ª—è –ø—Ä–∏–¥–∞–Ω–∏—è –æ–±—Ä–∞–∑—É —Ü–≤–µ—Ç–∞ –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —è—Ä–∫–∏–π —à–∞—Ä—Ñ –∏–ª–∏ –ø–ª–∞—Ç–æ–∫
    """
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    consultation_id = db.save_consultation(
        user_id, 
        "–ù–µ —É–∫–∞–∑–∞–Ω", 
        "–ù–µ —É–∫–∞–∑–∞–Ω—ã", 
        file_path, 
        advice
    )
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await update.message.reply_text(
        f"–ê–Ω–∞–ª–∏–∑ –≤–∞—à–µ–π –æ–¥–µ–∂–¥—ã (ID: {consultation_id}):\n\n"
        f"–≠—Ç–æ –±–µ–ª–∞—è –±–ª—É–∑–∞ —Å V-–æ–±—Ä–∞–∑–Ω—ã–º –≤—ã—Ä–µ–∑–æ–º. –û—Ç–ª–∏—á–Ω—ã–π –±–∞–∑–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –≥–∞—Ä–¥–µ—Ä–æ–±–∞!\n\n"
        f"–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:\n"
        f"- –î–ª—è —Ä–∞–±–æ—Ç—ã: —Å–æ—á–µ—Ç–∞–π—Ç–µ —Å –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–º–∏ –±—Ä—é–∫–∞–º–∏\n"
        f"- –î–ª—è –æ—Ç–¥—ã—Ö–∞: –ø–æ–¥–æ–π–¥—É—Ç –¥–∂–∏–Ω—Å—ã –∏–ª–∏ —Ü–≤–µ—Ç–Ω—ã–µ –±—Ä—é–∫–∏\n"
        f"- –ê–∫—Å–µ—Å—Å—É–∞—Ä—ã: –¥–æ–±–∞–≤—å—Ç–µ –æ–∂–µ—Ä–µ–ª—å–µ —Å—Ä–µ–¥–Ω–µ–π –¥–ª–∏–Ω—ã\n\n"
        f"–î–ª—è –ø–æ–ª–Ω–æ–π –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ /consultation {consultation_id}\n\n"
        f"–í–∞—à –±–∞–ª–∞–Ω—Å: {db.get_user_balance(user_id)} –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π"
    )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback_query –¥–ª—è –æ–ø–ª–∞—Ç—ã
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    query = update.callback_query
    user_id = query.from_user.id
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ
    await query.answer("–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å...")
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã callback_data
    if query.data.startswith("buy_"):
        amount = int(query.data.split("_")[1])
        prices = {1: 299, 3: 799, 5: 1299, 10: 2499}
        price = prices.get(amount, 299)
        
        # –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –ø–ª–∞—Ç–µ–∂–Ω—ã–º API Telegram
        # –°–µ–π—á–∞—Å –ø—Ä–æ—Å—Ç–æ –¥–æ–±–∞–≤–ª—è–µ–º –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
        db.update_user_balance(user_id, amount)
        db.record_payment(user_id, price, "completed")
        
        await query.edit_message_text(
            f"‚úÖ –°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–∫—É–ø–∫—É!\n\n"
            f"–í—ã –ø—Ä–∏–æ–±—Ä–µ–ª–∏ {amount} –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π –∑–∞ {price}‚ÇΩ\n"
            f"–í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {db.get_user_balance(user_id)} –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π"
        )
    elif query.data == "add_balance":
        # –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ —ç–∫—Ä–∞–Ω –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
        keyboard = [
            [
                InlineKeyboardButton("1 –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è - 299‚ÇΩ", callback_data="buy_1"),
                InlineKeyboardButton("3 –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ - 799‚ÇΩ", callback_data="buy_3")
            ],
            [
                InlineKeyboardButton("5 –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π - 1299‚ÇΩ", callback_data="buy_5"),
                InlineKeyboardButton("10 –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π - 2499‚ÇΩ", callback_data="buy_10")
            ]
        ]
        
        await query.edit_message_text(
            "–í—ã–±–µ—Ä–∏—Ç–µ –ø–∞–∫–µ—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π:",
            reply_markup=InlineKeyboardMarkup(keyboard)
        )

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /consultation
async def get_consultation(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    if not context.args:
        await update.message.reply_text(
            "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ ID –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏:\n/consultation ID"
        )
        return
    
    try:
        consultation_id = int(context.args[0])
        user_id = update.effective_user.id
        
        # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏
        consultation = db.get_consultation(consultation_id, user_id)
        
        if not consultation:
            await update.message.reply_text("–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –∏–ª–∏ —É –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –Ω–µ–π.")
            return
        
        advice = consultation['advice']
        await update.message.reply_text(f"–ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è #{consultation_id}:\n\n{advice}")
        
    except ValueError:
        await update.message.reply_text("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç ID. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ–≤–æ–π ID.")
    except Exception as e:
        logger.error(f"Error: {e}")
        await update.message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏.")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    user_id = update.effective_user.id
    balance = db.get_user_balance(user_id)
    
    await update.message.reply_html(
        "üì± <b>–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º:</b>\n\n"
        "1. –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –æ–¥–µ–∂–¥—ã –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É ¬´–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é¬ª\n"
        "2. –í—ã–±–µ—Ä–∏—Ç–µ –ø–æ–≤–æ–¥, –¥–ª—è –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã –ø–æ–¥–±–∏—Ä–∞–µ—Ç–µ –æ–¥–µ–∂–¥—É\n"
        "3. –î–æ–∂–¥–∏—Ç–µ—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –∞–Ω–∞–ª–∏–∑–∞\n\n"
        "üìã <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>\n"
        "/start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º\n"
        "/help - –ø–æ–ª—É—á–∏—Ç—å —Å–ø—Ä–∞–≤–∫—É –ø–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é –±–æ—Ç–∞\n"
        "/consultation ID - –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏\n\n"
        f"üí∞ –í–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å: {balance} –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–π"
    )

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main() -> None:
    # –°–æ–∑–¥–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    application = Application.builder().token(TOKEN).build()

    # –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CommandHandler("help", help_command))
    application.add_handler(CommandHandler("consultation", get_consultation))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, text_handler))
    application.add_handler(MessageHandler(filters.PHOTO, photo_handler))
    application.add_handler(CallbackQueryHandler(button_handler))

    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    application.run_polling()

if __name__ == "__main__":
    main()