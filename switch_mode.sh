#!/bin/bash
# ==============================================================================
# –ú–ò–®–£–†–ê - –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–æ–≤
# –í–µ—Ä—Å–∏—è: 1.0.0
# –î–∞—Ç–∞: 2025-06-04
# ==============================================================================

set -e  # –ü—Ä–µ–∫—Ä–∞—Ç–∏—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
PURPLE='\033[0;35m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Ü–≤–µ—Ç–Ω–æ–≥–æ —Ç–µ–∫—Å—Ç–∞
print_color() {
    echo -e "${1}${2}${NC}"
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –ª–æ–≥–æ—Ç–∏–ø–∞
show_logo() {
    print_color $PURPLE "
üé≠ ‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê
   –ú–ò–®–£–†–ê - –ü–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ò–ò-–°—Ç–∏–ª–∏—Å—Ç
   –°–∏—Å—Ç–µ–º–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–æ–≤ —Ä–∞–±–æ—Ç—ã
‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê"
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–º–æ—â–∏
show_help() {
    show_logo
    echo ""
    print_color $CYAN "üìñ –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–ï:"
    echo "  ./switch_mode.sh [–ö–û–ú–ê–ù–î–ê] [–û–ü–¶–ò–ò]"
    echo ""
    print_color $CYAN "üéØ –ö–û–ú–ê–ù–î–´:"
    echo "  demo         - –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –≤ –¥–µ–º–æ —Ä–µ–∂–∏–º (—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ)"
    echo "  dev          - –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –≤ —Ä–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
    echo "  prod         - –ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –≤ production —Ä–µ–∂–∏–º"
    echo "  status       - –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"
    echo "  backup       - –°–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"
    echo "  restore      - –ü–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏"
    echo "  logs         - –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–π"
    echo "  check        - –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã"
    echo "  help         - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    print_color $CYAN "üîß –û–ü–¶–ò–ò:"
    echo "  --force      - –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –±–µ–∑ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è"
    echo "  --no-restart - –ù–µ –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞—Ç—å —Å–µ—Ä–≤–∏—Å—ã"
    echo "  --quiet      - –¢–∏—Ö–∏–π —Ä–µ–∂–∏–º (–º–∏–Ω–∏–º—É–º –≤—ã–≤–æ–¥–∞)"
    echo ""
    print_color $CYAN "üí° –ü–†–ò–ú–ï–†–´:"
    echo "  ./switch_mode.sh status"
    echo "  ./switch_mode.sh demo"
    echo "  ./switch_mode.sh prod --force"
    echo "  ./switch_mode.sh backup"
    echo ""
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è Python —Å–∫—Ä–∏–ø—Ç–∞
check_python_script() {
    if [ ! -f "mode_switch.py" ]; then
        print_color $RED "‚ùå –û—à–∏–±–∫–∞: –§–∞–π–ª mode_switch.py –Ω–µ –Ω–∞–π–¥–µ–Ω!"
        print_color $YELLOW "üí° –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –∫–æ—Ä–Ω–µ–≤–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ –ú–ò–®–£–†–ê"
        exit 1
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ Python –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
check_dependencies() {
    if ! command -v python3 &> /dev/null; then
        print_color $RED "‚ùå –û—à–∏–±–∫–∞: Python 3 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
        exit 1
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –º–æ–¥—É–ª–µ–π
    python3 -c "import pathlib, json, shutil, subprocess" 2>/dev/null || {
        print_color $RED "‚ùå –û—à–∏–±–∫–∞: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ Python –º–æ–¥—É–ª–∏!"
        exit 1
    }
}

# –§—É–Ω–∫—Ü–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è
confirm_action() {
    local action="$1"
    local current_mode="$2"
    
    print_color $YELLOW "‚ö†Ô∏è  –í–ù–ò–ú–ê–ù–ò–ï: –í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å $action"
    if [ ! -z "$current_mode" ]; then
        print_color $YELLOW "   –¢–µ–∫—É—â–∏–π —Ä–µ–∂–∏–º: $current_mode"
    fi
    print_color $YELLOW "   –≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑–º–µ–Ω–∏—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."
    echo ""
    
    read -p "–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å? (y/N): " -n 1 -r
    echo ""
    
    if [[ ! $REPLY =~ ^[Yy]$ ]]; then
        print_color $YELLOW "‚ùå –û–ø–µ—Ä–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º"
        exit 0
    fi
}

# –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–∂–∏–º–∞
get_current_mode() {
    if [ -f ".env" ]; then
        grep "^ENVIRONMENT=" .env | cut -d'=' -f2 | tr -d '"' | tr -d "'"
    else
        echo "unknown"
    fi
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã
check_system() {
    print_color $BLUE "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã –ú–ò–®–£–†–ê..."
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã
    echo ""
    print_color $CYAN "üìÑ –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:"
    
    files=(".env" "webapp/js/config.js" "database.py" "bot.py")
    for file in "${files[@]}"; do
        if [ -f "$file" ]; then
            print_color $GREEN "  ‚úÖ $file"
        else
            print_color $RED "  ‚ùå $file (–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç)"
        fi
    done
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–æ—Ü–µ—Å—Å—ã
    echo ""
    print_color $CYAN "üîß –ó–∞–ø—É—â–µ–Ω–Ω—ã–µ –ø—Ä–æ—Ü–µ—Å—Å—ã:"
    
    if pgrep -f "python.*bot.py" > /dev/null; then
        print_color $GREEN "  ‚úÖ Bot –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω"
    else
        print_color $YELLOW "  ‚ö†Ô∏è  Bot –ø—Ä–æ—Ü–µ—Å—Å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    if pgrep -f "python.*webapp" > /dev/null; then
        print_color $GREEN "  ‚úÖ Webapp –ø—Ä–æ—Ü–µ—Å—Å –∑–∞–ø—É—â–µ–Ω"
    else
        print_color $YELLOW "  ‚ö†Ô∏è  Webapp –ø—Ä–æ—Ü–µ—Å—Å –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    echo ""
    print_color $CYAN "üóÑÔ∏è  –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö:"
    if [ -f "styleai.db" ]; then
        db_size=$(du -h styleai.db | cut -f1)
        print_color $GREEN "  ‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (—Ä–∞–∑–º–µ—Ä: $db_size)"
    else
        print_color $RED "  ‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞"
    fi
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    echo ""
    print_color $CYAN "üìÅ –î–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏:"
    dirs=("webapp" "Testing" "BACKUPS" "DEPLOYMENT")
    for dir in "${dirs[@]}"; do
        if [ -d "$dir" ]; then
            print_color $GREEN "  ‚úÖ $dir/"
        else
            print_color $YELLOW "  ‚ö†Ô∏è  $dir/ (–æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç)"
        fi
    done
}

# –ü–æ–∫–∞–∑–∞—Ç—å –ª–æ–≥–∏
show_logs() {
    print_color $BLUE "üìã –õ–æ–≥–∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–æ–≤:"
    echo ""
    
    if [ -f "mode_switch.log" ]; then
        print_color $CYAN "üìÑ –ü–æ—Å–ª–µ–¥–Ω–∏–µ 20 –∑–∞–ø–∏—Å–µ–π –∏–∑ mode_switch.log:"
        echo "----------------------------------------"
        tail -20 mode_switch.log
    else
        print_color $YELLOW "‚ö†Ô∏è  –§–∞–π–ª –ª–æ–≥–æ–≤ mode_switch.log –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    
    echo ""
    if [ -f "mishura.log" ]; then
        print_color $CYAN "üìÑ –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∑–∞–ø–∏—Å–µ–π –∏–∑ mishura.log:"
        echo "----------------------------------------"
        tail -10 mishura.log
    else
        print_color $YELLOW "‚ö†Ô∏è  –§–∞–π–ª –ª–æ–≥–æ–≤ mishura.log –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
main() {
    local command="$1"
    local force_flag=""
    local no_restart_flag=""
    local quiet_flag=""
    
    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–ø—Ü–∏–π
    shift
    while [[ $# -gt 0 ]]; do
        case $1 in
            --force)
                force_flag="--force"
                shift
                ;;
            --no-restart)
                no_restart_flag="--no-restart"
                shift
                ;;
            --quiet)
                quiet_flag="--quiet"
                shift
                ;;
            *)
                print_color $RED "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $1"
                exit 1
                ;;
        esac
    done
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º—ã
    check_python_script
    check_dependencies
    
    case $command in
        "demo"|"development"|"production"|"dev"|"prod")
            # –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞–∑–≤–∞–Ω–∏–π —Ä–µ–∂–∏–º–æ–≤
            case $command in
                "dev") command="development" ;;
                "prod") command="production" ;;
            esac
            
            current_mode=$(get_current_mode)
            
            if [ "$current_mode" = "$command" ]; then
                print_color $YELLOW "‚ÑπÔ∏è  –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —É–∂–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ —Ä–µ–∂–∏–º–µ: $command"
                exit 0
            fi
            
            if [ -z "$force_flag" ]; then
                confirm_action "–ø–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –≤ —Ä–µ–∂–∏–º $command" "$current_mode"
            fi
            
            if [ -z "$quiet_flag" ]; then
                show_logo
                print_color $BLUE "üîÑ –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –≤ —Ä–µ–∂–∏–º: $command"
            fi
            
            # –í—ã–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ
            python3 mode_switch.py --mode "$command" $no_restart_flag
            
            if [ $? -eq 0 ]; then
                print_color $GREEN "‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–æ –≤ —Ä–µ–∂–∏–º: $command"
                if [ -z "$quiet_flag" ]; then
                    echo ""
                    print_color $CYAN "üí° –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞: ./switch_mode.sh status"
                fi
            else
                print_color $RED "‚ùå –û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è —Ä–µ–∂–∏–º–∞"
                exit 1
            fi
            ;;
            
        "status")
            show_logo
            python3 mode_switch.py --status
            ;;
            
        "backup")
            if [ -z "$force_flag" ]; then
                confirm_action "—Å–æ–∑–¥–∞—Ç—å —Ä–µ–∑–µ—Ä–≤–Ω—É—é –∫–æ–ø–∏—é —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫"
            fi
            
            python3 mode_switch.py --backup
            ;;
            
        "restore")
            show_logo
            python3 mode_switch.py --list-backups
            ;;
            
        "logs")
            show_logo
            show_logs
            ;;
            
        "check")
            show_logo
            check_system
            ;;
            
        "help"|"--help"|"-h"|"")
            show_help
            ;;
            
        *)
            print_color $RED "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞: $command"
            echo ""
            show_help
            exit 1
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏
main "$@"