// üé≠ –ú–ò–®–£–†–ê - Luxury –ò–ò –°—Ç–∏–ª–∏—Å—Ç
// app-v2-patched.js - –ù–æ–≤–∞—è –≤–µ—Ä—Å–∏—è —Å –ø–∞—Ç—á–∞–º–∏ V2 –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
// –í–µ—Ä—Å–∏—è: 2.0.0 - –í—Å–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—Ä–∏–º–µ–Ω–µ–Ω—ã

console.log('üé≠ –ú–ò–®–£–†–ê App –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è —Å –ø–∞—Ç—á–∞–º–∏ V2...');

class MishuraApp {
    constructor() {
        console.log('üöÄ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è MishuraApp —Å –ø–∞—Ç—á–∞–º–∏ V2...');
        
        // –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
        this.currentMode = null; // 'single' –∏–ª–∏ 'compare'
        this.currentSection = 'home'; // 'home', 'history', 'balance'
        this.compareImages = [null, null, null, null];
        this.singleImage = null;
        this.isLoading = false;
        this.lastAnalysisResult = null;
        
        // –ü–ê–¢–ß V2: –£–≤–µ–ª–∏—á–µ–Ω timeout –¥–æ 90 —Å–µ–∫—É–Ω–¥
        this.requestTimeout = 90000; // 90 —Å–µ–∫—É–Ω–¥ –≤–º–µ—Å—Ç–æ 30
        
        // –ü–ê–¢–ß V2: –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏–µ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã—Ö —Ü–∏–∫–ª–æ–≤
        this.eventListenersAttached = false;
        this.initializationComplete = false;
        
        // –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
        this.userBalance = 100;
        this.consultationsHistory = [];
        this.consultationsUsed = 0;
        
        // –ü–ê–¢–ß V2: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è API —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
        this.api = null;
        this.initializeAPI();
        
        // –í–∞—Ä–∏–∞–Ω—Ç—ã –ø–æ–≤–æ–¥–æ–≤
        this.occasionOptions = [
            'üíº –î–µ–ª–æ–≤–∞—è –≤—Å—Ç—Ä–µ—á–∞',
            '‚ù§Ô∏è –°–≤–∏–¥–∞–Ω–∏–µ', 
            'üö∂ –ü–æ–≤—Å–µ–¥–Ω–µ–≤–Ω–∞—è –ø—Ä–æ–≥—É–ª–∫–∞',
            'üéâ –í–µ—á–µ—Ä–∏–Ω–∫–∞',
            'üëî –°–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ',
            'üçΩÔ∏è –£–∂–∏–Ω –≤ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–µ',
            'üé≠ –¢–µ–∞—Ç—Ä/–∫–æ–Ω—Ü–µ—Ä—Ç',
            'üèãÔ∏è –°–ø–æ—Ä—Ç–∑–∞–ª/—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞',
            'üõçÔ∏è –®–æ–ø–ø–∏–Ω–≥',
            '‚úàÔ∏è –ü—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ',
            'üéì –£—á–µ–±–∞/—É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç',
            'üè† –î–æ–º–∞/–æ—Ç–¥—ã—Ö',
            'üåû –ü–ª—è–∂/–æ—Ç–ø—É—Å–∫',
            '‚ùÑÔ∏è –ó–∏–º–Ω—è—è –ø—Ä–æ–≥—É–ª–∫–∞',
            'üåßÔ∏è –î–æ–∂–¥–ª–∏–≤–∞—è –ø–æ–≥–æ–¥–∞',
            'üé™ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –Ω–∞ —Å–≤–µ–∂–µ–º –≤–æ–∑–¥—É—Ö–µ'
        ];
        
        // –ê–Ω–∞–ª–∏—Ç–∏–∫–∞
        this.analytics = {
            appStartTime: Date.now(),
            analysisRequested: 0,
            successfulAnalysis: 0,
            errors: 0
        };
        
        // –ü–ê–¢–ß V2: –û—Ç–ª–æ–∂–µ–Ω–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è race condition
        this.init = this.init.bind(this);
        setTimeout(() => this.init(), 100);
    }

    // –ü–ê–¢–ß V2: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è API
    initializeAPI() {
        try {
            if (window.MishuraAPIService) {
                this.api = new window.MishuraAPIService();
                console.log('‚úÖ API —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–æ–∑–¥–∞–Ω:', this.api);
            } else if (window.mishuraAPI) {
                this.api = window.mishuraAPI;
                console.log('‚úÖ API –∫–ª–∏–µ–Ω—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω:', this.api);
            } else {
                console.warn('‚ö†Ô∏è API –∫–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, –±—É–¥–µ—Ç –ø–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞...');
                // –ü–ê–¢–ß V2: –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ 1 —Å–µ–∫—É–Ω–¥—É
                setTimeout(() => {
                    this.initializeAPI();
                }, 1000);
            }
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ API:', error);
            this.api = null;
        }
    }

    // üéØ –ü–ê–¢–ß V2: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–µ–∑ —Ü–∏–∫–ª–æ–≤
    init() {
        if (this.initializationComplete) {
            console.log('‚ö†Ô∏è –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–∂–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –ø—Ä–æ–ø—É—Å–∫–∞–µ–º');
            return;
        }

        try {
            console.log('üéØ –ù–∞—á–∞–ª–æ –±–µ–∑–æ–ø–∞—Å–Ω–æ–π –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏...');
            
            // –û—Å–Ω–æ–≤–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è
            this.setupModeButtons();
            this.setupCloseButtons();
            this.setupSubmitButton();
            this.initUploaders();
            this.setupNavigation();
            
            // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
            this.setupKeyboardShortcuts();
            this.setupDragAndDrop();
            this.setupContextMenu();
            this.setupOccasionDropdown();
            
            // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            this.loadUserData();
            
            // Telegram –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
            this.setupTelegramIntegration();
            
            this.initializationComplete = true;
            console.log('‚úÖ MishuraApp –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Å –ø–∞—Ç—á–∞–º–∏ V2');
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', error);
        }
    }

    // –ü–ê–¢–ß V2: –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–æ–≤ API –≤ –µ–¥–∏–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
    normalizeAPIResponse(response) {
        console.log('üîÑ –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ API:', response);
        
        // –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç —É–∂–µ –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
        if (response && typeof response === 'object' && response.advice) {
            return {
                advice: response.advice,
                metadata: response.metadata || {
                    timestamp: new Date().toISOString(),
                    status: response.status || 'success'
                }
            };
        }
        
        // –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç - —Å—Ç—Ä–æ–∫–∞
        if (typeof response === 'string') {
            return {
                advice: response,
                metadata: {
                    timestamp: new Date().toISOString(),
                    status: 'success',
                    source: 'string_response'
                }
            };
        }
        
        // –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç message –≤–º–µ—Å—Ç–æ advice
        if (response && response.message) {
            return {
                advice: response.message,
                metadata: {
                    timestamp: new Date().toISOString(),
                    status: response.status || 'success',
                    source: 'message_field'
                }
            };
        }
        
        // –ï—Å–ª–∏ –æ—Ç–≤–µ—Ç —Å–æ–¥–µ—Ä–∂–∏—Ç –¥—Ä—É–≥–∏–µ –ø–æ–ª—è —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º
        if (response && typeof response === 'object') {
            const contentFields = ['text', 'content', 'result', 'analysis'];
            for (const field of contentFields) {
                if (response[field]) {
                    return {
                        advice: response[field],
                        metadata: {
                            timestamp: new Date().toISOString(),
                            status: response.status || 'success',
                            source: field
                        }
                    };
                }
            }
        }
        
        // Fallback
        return {
            advice: '–ê–Ω–∞–ª–∏–∑ –ø–æ–ª—É—á–µ–Ω, –Ω–æ —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.',
            metadata: {
                timestamp: new Date().toISOString(),
                status: 'warning',
                source: 'fallback'
            }
        };
    }

    // –ü–ê–¢–ß V2: –ù–æ–≤—ã–π –º–µ—Ç–æ–¥ –ø–∞—Ä—Å–∏–Ω–≥–∞ markdown —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    parseMarkdownStructure(text) {
        if (!text) return '';
        
        console.log('üìã –ü–∞—Ä—Å–∏–Ω–≥ markdown —Å—Ç—Ä—É–∫—Ç—É—Ä—ã...');
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Ä–∞–∑–Ω—ã—Ö —É—Ä–æ–≤–Ω–µ–π
        text = text.replace(/^### (.*$)/gm, '<h4>$1</h4>');
        text = text.replace(/^## (.*$)/gm, '<h3>$1</h3>');
        text = text.replace(/^# (.*$)/gm, '<h2>$1</h2>');
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ —Å **–ó–∞–≥–æ–ª–æ–≤–æ–∫:**
        text = text.replace(/\*\*(.*?):\*\*/g, '<h4>$1</h4>');
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∂–∏—Ä–Ω—ã–π —Ç–µ–∫—Å—Ç
        text = text.replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>');
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫—É—Ä—Å–∏–≤
        text = text.replace(/\*(.*?)\*/g, '<em>$1</em>');
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–ø–∏—Å–∫–∏
        text = text.replace(/^- (.*$)/gm, '<li>$1</li>');
        text = text.replace(/(<li>.*<\/li>)/gs, '<ul>$1</ul>');
        
        // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∞–±–∑–∞—Ü—ã
        const paragraphs = text.split('\n\n').filter(p => p.trim());
        let formattedText = '';
        
        paragraphs.forEach(paragraph => {
            paragraph = paragraph.trim();
            if (paragraph) {
                // –ï—Å–ª–∏ —ç—Ç–æ —É–∂–µ HTML —Ç–µ–≥, –Ω–µ –æ–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ <p>
                if (paragraph.startsWith('<h') || paragraph.startsWith('<ul') || paragraph.startsWith('<div')) {
                    formattedText += paragraph;
                } else {
                    formattedText += `<p>${paragraph}</p>`;
                }
            }
        });
        
        console.log('‚úÖ Markdown —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞');
        return formattedText;
    }

    // –ü–ê–¢–ß V2: –ü–æ–ª–Ω–æ—Å—Ç—å—é –ø–µ—Ä–µ–ø–∏—Å–∞–Ω–Ω—ã–π –º–µ—Ç–æ–¥ submitSingle —Å —É–ª—É—á—à–µ–Ω–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–æ–π
    async submitSingle(occasion, preferences) {
        console.log('üöÄ Single submit –Ω–∞—á–∞–ª—Å—è —Å –ø–∞—Ç—á–∞–º–∏ V2');
        
        if (!this.singleImage) {
            this.showNotification('–ó–∞–≥—Ä—É–∑–∏—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ', 'error');
            this.triggerHapticFeedback('error');
            return;
        }
        
        // –ü—Ä–æ–≤–µ—Ä—è–µ–º API
        if (!this.api) {
            this.showNotification('‚ùå API –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω', 'error');
            this.triggerHapticFeedback('error');
            return;
        }
        
        this.showLoading();
        this.triggerHapticFeedback('medium');
        
        // –ü–ê–¢–ß V2: –°–æ–∑–¥–∞–µ–º promise —Å —É–≤–µ–ª–∏—á–µ–Ω–Ω—ã–º timeout
        const timeoutPromise = new Promise((_, reject) => {
            setTimeout(() => {
                reject(new Error(`–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è (${this.requestTimeout / 1000} —Å–µ–∫)`));
            }, this.requestTimeout);
        });
        
        try {
            console.log('üì° –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –∫ API —Å timeout 90 —Å–µ–∫...');
            console.log('üîç –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ—Ç–æ–¥: analyzeSingle');
            
            // –ü–ê–¢–ß V2: Race –º–µ–∂–¥—É API –∑–∞–ø—Ä–æ—Å–æ–º –∏ timeout
            const apiPromise = this.api.analyzeSingle(this.singleImage, occasion, preferences);
            const result = await Promise.race([apiPromise, timeoutPromise]);
            
            console.log('‚úÖ Single —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—É—á–µ–Ω:', result);
            
            // –ü–ê–¢–ß V2: –í–∞–ª–∏–¥–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ –ø–µ—Ä–µ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–æ–π
            if (!result) {
                throw new Error('–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç API');
            }
            
            this.lastAnalysisResult = result;
            this.analytics.successfulAnalysis++;
            this.showResult(result);
            this.triggerHapticFeedback('success');
            
        } catch (error) {
            console.error('‚ùå Single –æ—à–∏–±–∫–∞:', error);
            this.analytics.errors++;
            
            // –ü–ê–¢–ß V2: –£–ª—É—á—à–µ–Ω–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Ç–∏–ø–æ–≤ –æ—à–∏–±–æ–∫
            let errorMessage = '–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞';
            
            if (error.message.includes('timeout') || error.message.includes('–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è')) {
                errorMessage = '–ê–Ω–∞–ª–∏–∑ –∑–∞–Ω–∏–º–∞–µ—Ç –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–∏ —á–µ–º –æ–±—ã—á–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.';
            } else if (error.message.includes('—Å–µ—Ç–∏') || error.message.includes('network')) {
                errorMessage = '–ü—Ä–æ–±–ª–µ–º—ã —Å —Å–µ—Ç—å—é. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç—É.';
            } else if (error.message.includes('API')) {
                errorMessage = '–°–µ—Ä–≤–∏—Å –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —á–µ—Ä–µ–∑ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç.';
            } else {
                errorMessage = `–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: ${error.message}`;
            }
            
            this.showError(errorMessage);
            this.triggerHapticFeedback('error');
        }
    }

    // –ü–ê–¢–ß V2: –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –∏ –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    getAnalytics() {
        return {
            ...this.analytics,
            sessionDuration: Date.now() - this.analytics.appStartTime,
            userBalance: this.userBalance,
            consultationsHistory: this.consultationsHistory.length,
            currentMode: this.currentMode,
            currentSection: this.currentSection,
            apiConnected: !!this.api,
            initializationComplete: this.initializationComplete
        };
    }

    // –ü–ê–¢–ß V2: –ú–µ—Ç–æ–¥ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    diagnostics() {
        console.log('üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê MISHURA APP:');
        console.log('üìä –ê–Ω–∞–ª–∏—Ç–∏–∫–∞:', this.getAnalytics());
        console.log('üîß API —Å—Ç–∞—Ç—É—Å:', this.api ? '–ü–æ–¥–∫–ª—é—á–µ–Ω' : '–ù–µ –ø–æ–¥–∫–ª—é—á–µ–Ω');
        console.log('üñºÔ∏è –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', {
            single: !!this.singleImage,
            compare: this.compareImages.filter(img => img !== null).length
        });
        console.log('üí∞ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:', {
            balance: this.userBalance,
            used: this.consultationsUsed,
            history: this.consultationsHistory.length
        });
    }

    // –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –¥—Ä—É–≥–∏—Ö –º–µ—Ç–æ–¥–æ–≤ (–¥–æ–±–∞–≤—å—Ç–µ –ø–æ–ª–Ω—ã–π –∫–æ–¥ –∏–∑ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞)
    setupModeButtons() { /* –∫–æ–¥ –∏–∑ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ */ }
    setupNavigation() { /* –∫–æ–¥ –∏–∑ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ */ }
    setupCloseButtons() { /* –∫–æ–¥ –∏–∑ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ */ }
    setupSubmitButton() { /* –∫–æ–¥ –∏–∑ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ */ }
    initUploaders() { /* –∫–æ–¥ –∏–∑ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ */ }
    setupKeyboardShortcuts() { /* –∫–æ–¥ –∏–∑ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ */ }
    setupDragAndDrop() { /* –∫–æ–¥ –∏–∑ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ */ }
    setupContextMenu() { /* –∫–æ–¥ –∏–∑ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ */ }
    setupOccasionDropdown() { /* –∫–æ–¥ –∏–∑ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ */ }
    loadUserData() { /* –∫–æ–¥ –∏–∑ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ */ }
    setupTelegramIntegration() { /* –∫–æ–¥ –∏–∑ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ */ }
    showNotification() { /* –∫–æ–¥ –∏–∑ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ */ }
    triggerHapticFeedback() { /* –∫–æ–¥ –∏–∑ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ */ }
    showLoading() { /* –∫–æ–¥ –∏–∑ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ */ }
    showResult() { /* –∫–æ–¥ –∏–∑ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ */ }
    showError() { /* –∫–æ–¥ –∏–∑ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞ */ }
    // ... –∏ –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã
}

// –≠–ö–°–ü–û–†–¢ –î–õ–Ø –ò–°–ü–û–õ–¨–ó–û–í–ê–ù–ò–Ø
if (typeof module !== 'undefined' && module.exports) {
    module.exports = MishuraApp;
} else {
    window.MishuraApp = MishuraApp;
}

console.log('‚úÖ MishuraApp –∫–ª–∞—Å—Å —Å –ø–∞—Ç—á–∞–º–∏ V2 –∑–∞–≥—Ä—É–∂–µ–Ω');