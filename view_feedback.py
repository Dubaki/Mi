#!/usr/bin/env python3
# view_feedback.py - –ü—Ä–æ—Å–º–æ—Ç—Ä –æ—Ç–∑—ã–≤–æ–≤ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö

"""
üìù –°–ö–†–ò–ü–¢ –ü–†–û–°–ú–û–¢–†–ê –û–¢–ó–´–í–û–í –ú–ò–®–£–†–ê
–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≤—Å–µ –æ—Ç–∑—ã–≤—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π
"""

from database import MishuraDB
from datetime import datetime
import json

def view_all_feedback():
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –æ—Ç–∑—ã–≤—ã –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    print("üìù –ü–†–û–°–ú–û–¢–† –û–¢–ó–´–í–û–í –ú–ò–®–£–†–ê")
    print("=" * 60)
    
    try:
        db = MishuraDB()
        
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ –æ—Ç–∑—ã–≤—ã
        query = """
            SELECT id, telegram_id, feedback_text, feedback_rating, 
                   character_count, consultation_id, bonus_awarded, created_at
            FROM feedback_submissions 
            ORDER BY created_at DESC
        """
        
        results = db._execute_query(query, fetch_all=True)
        
        if not results:
            print("‚ùå –û—Ç–∑—ã–≤–æ–≤ –ø–æ–∫–∞ –Ω–µ—Ç")
            return
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –æ—Ç–∑—ã–≤–æ–≤: {len(results)}")
        print("=" * 60)
        
        for i, row in enumerate(results, 1):
            feedback_id = row[0]
            telegram_id = row[1]
            feedback_text = row[2]
            feedback_rating = row[3]
            character_count = row[4]
            consultation_id = row[5]
            bonus_awarded = row[6]
            created_at = row[7]
            
            # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–∫–æ–Ω–∫—É —Ä–µ–π—Ç–∏–Ω–≥–∞
            rating_icon = "üëç" if feedback_rating == "positive" else "üëé"
            bonus_icon = "üí∞" if bonus_awarded else "‚è≥"
            
            print(f"\nüîπ –û–¢–ó–´–í #{i} (ID: {feedback_id})")
            print(f"   üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {telegram_id}")
            print(f"   {rating_icon} –û—Ü–µ–Ω–∫–∞: {feedback_rating}")
            print(f"   üìè –°–∏–º–≤–æ–ª–æ–≤: {character_count}")
            print(f"   üÜî –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è: {consultation_id}")
            print(f"   {bonus_icon} –ë–æ–Ω—É—Å: {'–ù–∞—á–∏—Å–ª–µ–Ω' if bonus_awarded else '–ù–µ –Ω–∞—á–∏—Å–ª–µ–Ω'}")
            print(f"   üìÖ –î–∞—Ç–∞: {created_at}")
            print(f"   üìù –¢–µ–∫—Å—Ç:")
            
            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –æ—Ç–∑—ã–≤–∞
            text_lines = feedback_text.split('\n')
            for line in text_lines:
                if line.strip():
                    print(f"      {line}")
            
            print("-" * 40)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        print(f"\nüìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê:")
        stats = db.get_feedback_stats()
        print(f"   –í—Å–µ–≥–æ –æ—Ç–∑—ã–≤–æ–≤: {stats.get('total_feedback', 0)}")
        print(f"   –°–µ–≥–æ–¥–Ω—è: {stats.get('feedback_today', 0)}")
        print(f"   –°—Ä–µ–¥–Ω—è—è –¥–ª–∏–Ω–∞: {stats.get('avg_feedback_length', 0)} —Å–∏–º–≤–æ–ª–æ–≤")
        print(f"   –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö: {stats.get('positive_feedback_percent', 0)}%")
        print(f"   –ë–æ–Ω—É—Å–æ–≤ –Ω–∞—á–∏—Å–ª–µ–Ω–æ: {stats.get('bonuses_awarded', 0)}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()

def view_user_feedback(telegram_id):
    """–ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç–∑—ã–≤—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    print(f"üìù –û–¢–ó–´–í–´ –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø {telegram_id}")
    print("=" * 50)
    
    try:
        db = MishuraDB()
        
        query = """
            SELECT id, feedback_text, feedback_rating, character_count, 
                   consultation_id, bonus_awarded, created_at
            FROM feedback_submissions 
            WHERE telegram_id = ?
            ORDER BY created_at DESC
        """
        
        results = db._execute_query(query, (telegram_id,), fetch_all=True)
        
        if not results:
            print(f"‚ùå –£ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {telegram_id} –Ω–µ—Ç –æ—Ç–∑—ã–≤–æ–≤")
            return
        
        print(f"üìä –ù–∞–π–¥–µ–Ω–æ –æ—Ç–∑—ã–≤–æ–≤: {len(results)}")
        print("=" * 50)
        
        for i, row in enumerate(results, 1):
            feedback_id = row[0]
            feedback_text = row[1]
            feedback_rating = row[2]
            character_count = row[3]
            consultation_id = row[4]
            bonus_awarded = row[5]
            created_at = row[6]
            
            rating_icon = "üëç" if feedback_rating == "positive" else "üëé"
            bonus_icon = "üí∞" if bonus_awarded else "‚è≥"
            
            print(f"\nüîπ –û–¢–ó–´–í #{i}")
            print(f"   {rating_icon} –û—Ü–µ–Ω–∫–∞: {feedback_rating}")
            print(f"   üìè –°–∏–º–≤–æ–ª–æ–≤: {character_count}")
            print(f"   {bonus_icon} –ë–æ–Ω—É—Å: {'–ù–∞—á–∏—Å–ª–µ–Ω' if bonus_awarded else '–ù–µ –Ω–∞—á–∏—Å–ª–µ–Ω'}")
            print(f"   üìÖ –î–∞—Ç–∞: {created_at}")
            print(f"   üìù –¢–µ–∫—Å—Ç: {feedback_text}")
            print("-" * 30)
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    import sys
    
    if len(sys.argv) > 1:
        # –ü–æ–∫–∞–∑–∞—Ç—å –æ—Ç–∑—ã–≤—ã –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        try:
            user_id = int(sys.argv[1])
            view_user_feedback(user_id)
        except ValueError:
            print("‚ùå –£–∫–∞–∂–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π telegram_id (—á–∏—Å–ª–æ)")
    else:
        # –ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –æ—Ç–∑—ã–≤—ã
        view_all_feedback()
    
    print("\n" + "=" * 60)
    print("üìä –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –æ—Ç–∑—ã–≤–æ–≤ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    print("   python view_feedback.py <telegram_id>")
    print("üìä –î–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –æ—Ç–∑—ã–≤–æ–≤:")
    print("   python view_feedback.py")