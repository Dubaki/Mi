// –ì–õ–ê–í–ù–û–ï –ü–†–ò–õ–û–ñ–ï–ù–ò–ï - webapp/app.js
console.log('üöÄ –ì–ª–∞–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–∞–µ—Ç—Å—è...');

class MishuraApp {
    constructor() {
        console.log('üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è MishuraApp');
        this.api = new window.MishuraAPIService();
        this.compareImages = [null, null, null, null];
        this.init();
    }

    init() {
        console.log('üîó –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π');
        
        // –ö–Ω–æ–ø–∫–∞ Compare
        const compareBtn = document.getElementById('compare-mode-btn');
        if (compareBtn) {
            compareBtn.addEventListener('click', () => {
                console.log('üîÑ –û—Ç–∫—Ä—ã—Ç–∏–µ Compare —Ä–µ–∂–∏–º–∞');
                this.openCompareModal();
            });
            console.log('‚úÖ Compare button –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        }

        // –ö–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è
        const cancelBtns = ['consultation-cancel', 'form-cancel'];
        cancelBtns.forEach(id => {
            const btn = document.getElementById(id);
            if (btn) {
                btn.addEventListener('click', () => this.closeModal());
            }
        });

        // –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏
        const submitBtn = document.getElementById('form-submit');
        if (submitBtn) {
            submitBtn.addEventListener('click', () => this.submit());
        }

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑—á–∏–∫–æ–≤
        this.initUploaders();
        
        console.log('‚úÖ MishuraApp –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ');
    }

    openCompareModal() {
        const modal = document.getElementById('consultation-overlay');
        const compareMode = document.getElementById('compare-mode');
        
        if (modal && compareMode) {
            modal.classList.add('active');
            compareMode.classList.add('active');
            
            // –°–∫—Ä—ã–≤–∞–µ–º single —Ä–µ–∂–∏–º
            const singleMode = document.getElementById('single-mode');
            if (singleMode) {
                singleMode.classList.remove('active');
            }
            
            console.log('‚úÖ Compare modal –æ—Ç–∫—Ä—ã—Ç');
        }
    }

    closeModal() {
        const modal = document.getElementById('consultation-overlay');
        if (modal) {
            modal.classList.remove('active');
            console.log('‚úÖ Modal –∑–∞–∫—Ä—ã—Ç');
        }
    }

    initUploaders() {
        for (let i = 0; i < 4; i++) {
            const slot = document.querySelector(`[data-slot="${i}"]`);
            const input = document.getElementById(`compare-file-input-${i}`);
            
            if (slot && input) {
                slot.addEventListener('click', () => {
                    console.log(`üìÅ –í—ã–±–æ—Ä —Ñ–∞–π–ª–∞ –¥–ª—è —Å–ª–æ—Ç–∞ ${i + 1}`);
                    input.click();
                });
                
                input.addEventListener('change', (e) => {
                    if (e.target.files[0]) {
                        this.handleUpload(e.target.files[0], i);
                    }
                });
            }
        }
        console.log('‚úÖ –ó–∞–≥—Ä—É–∑—á–∏–∫–∏ —Ñ–∞–π–ª–æ–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã');
    }

    handleUpload(file, index) {
        console.log(`üì∑ –ó–∞–≥—Ä—É–∂–µ–Ω —Ñ–∞–π–ª –≤ —Å–ª–æ—Ç ${index + 1}: ${file.name}`);
        
        this.compareImages[index] = file;
        
        const reader = new FileReader();
        reader.onload = (e) => {
            const slot = document.querySelector(`[data-slot="${index}"]`);
            if (slot) {
                slot.innerHTML = `
                    <span class="slot-number">${index + 1}</span>
                    <img src="${e.target.result}" alt="–ü—Ä–µ–≤—å—é ${index + 1}">
                `;
                slot.classList.add('has-image');
            }
            
            this.updateSubmitButton();
            this.showForm();
        };
        reader.readAsDataURL(file);
    }

    updateSubmitButton() {
        const uploadedCount = this.compareImages.filter(img => img !== null).length;
        const btn = document.getElementById('form-submit');
        
        if (btn) {
            btn.disabled = uploadedCount < 2;
            console.log(`üîò –ö–Ω–æ–ø–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: ${btn.disabled ? '–Ω–µ–∞–∫—Ç–∏–≤–Ω–∞' : '–ê–ö–¢–ò–í–ù–ê'} (${uploadedCount}/4 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π)`);
        }
    }

    showForm() {
        const form = document.getElementById('consultation-form');
        if (form) {
            form.classList.add('active');
            console.log('‚úÖ –§–æ—Ä–º–∞ –ø–æ–∫–∞–∑–∞–Ω–∞');
        }
    }

    async submit() {
        const occasion = document.getElementById('occasion').value.trim();
        
        if (!occasion) {
            alert('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –ø–æ–≤–æ–¥');
            return;
        }
        
        const images = this.compareImages.filter(img => img !== null);
        
        if (images.length < 2) {
            alert('–ó–∞–≥—Ä—É–∑–∏—Ç–µ –º–∏–Ω–∏–º—É–º 2 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
            return;
        }
        
        console.log(`üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ ${images.length} –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –Ω–∞ –∞–Ω–∞–ª–∏–∑...`);
        this.showLoading();
        
        try {
            const result = await this.api.analyzeCompare(images, occasion);
            console.log('‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–ª—É—á–µ–Ω:', result);
            this.showResult(result);
        } catch (error) {
            console.error('‚ùå –û—à–∏–±–∫–∞:', error);
            this.showError(error.message);
        }
    }

    showLoading() {
        document.getElementById('loading').classList.add('active');
        document.getElementById('consultation-form').classList.remove('active');
        document.getElementById('result').classList.remove('active');
    }

    showResult(result) {
        document.getElementById('loading').classList.remove('active');
        
        const content = document.getElementById('result-content');
        if (content) {
            content.innerHTML = result.advice || result.message || '–ê–Ω–∞–ª–∏–∑ –ø–æ–ª—É—á–µ–Ω';
        }
        
        document.getElementById('result').classList.add('active');
    }

    showError(message) {
        document.getElementById('loading').classList.remove('active');
        
        const content = document.getElementById('result-content');
        if (content) {
            content.innerHTML = `<p style="color: #e74c3c;">–û—à–∏–±–∫–∞: ${message}</p>`;
        }
        
        document.getElementById('result').classList.add('active');
    }
}

// –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –≤ window
window.MishuraApp = MishuraApp;
console.log('‚úÖ MishuraApp –¥–æ—Å—Ç—É–ø–µ–Ω –≤ window');

// –ê–≤—Ç–æ–∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', () => {
    console.log('üîÑ DOM –∑–∞–≥—Ä—É–∂–µ–Ω, —Å–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è...');
    window.mishuraApp = new MishuraApp();
    console.log('üéâ –ú–ò–®–£–†–ê –≥–æ—Ç–æ–≤–æ –∫ —Ä–∞–±–æ—Ç–µ!');
});