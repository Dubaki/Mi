/*
==========================================================================================
–ü–†–û–ï–ö–¢: –ú–ò–®–£–†–ê - –í–∞—à –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –ò–ò-–°—Ç–∏–ª–∏—Å—Ç
–ö–û–ú–ü–û–ù–ï–ù–¢: –ì–ª–∞–≤–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ (app.js)
–í–ï–†–°–ò–Ø: 1.2.0 (–ò–°–ü–†–ê–í–õ–ï–ù–ê –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø API SERVICE)
–î–ê–¢–ê –û–ë–ù–û–í–õ–ï–ù–ò–Ø: 2025-05-31

–ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø:
- –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è API Service (–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å)
- –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ consultation –º–æ–¥—É–ª—è
- –£–ª—É—á—à–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
==========================================================================================
*/

window.MishuraApp = window.MishuraApp || {};

window.MishuraApp.app = (function() {
    'use strict';
    
    let logger;
    let uiHelpers;
    let apiService;
    let modals;
    let consultation;
    let comparison;
    let imageUpload;
    let isAppInitialized = false;
    
    function init() {
        if (isAppInitialized) {
            console.warn('App.js: –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è app.js –ø—Ä–æ–ø—É—â–µ–Ω–∞.');
            return;
        }

        console.log('üöÄ –ù–∞—á–∞–ª–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ú–ò–®–£–†–ê (app.js v1.2.0)');
        
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –º–æ–¥—É–ª–∏ –ø–æ –ø–æ—Ä—è–¥–∫—É —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏
        initializeLogger();
        initializeConfig();
        initializeUIHelpers();
        initializeAPIService();
        initializeModals();
        initializeImageUpload();
        initializeConsultation();
        initializeComparison();
        
        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        setTimeout(() => {
            setupEventHandlers();
            setupNavigation();
        }, 100);
        
        isAppInitialized = true;
        if (logger) {
            logger.info('–ì–ª–∞–≤–Ω—ã–π –º–æ–¥—É–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (app.js) —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        } else {
            console.info('App.js: –ì–ª–∞–≤–Ω—ã–π –º–æ–¥—É–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        }
    }
    
    function initializeLogger() {
        try {
            if (window.MishuraApp && 
                window.MishuraApp.utils && 
                window.MishuraApp.utils.logger) {
                logger = window.MishuraApp.utils.logger;
                if (typeof logger.init === 'function') {
                    logger.init();
                }
                console.log('App.js: Logger —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            } else {
                logger = console;
                console.warn('App.js: Logger –Ω–µ –Ω–∞–π–¥–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è console fallback');
            }
        } catch (error) {
            console.error('App.js: –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ logger:', error);
            logger = console;
        }
    }

    function initializeConfig() {
        try {
            if (window.MishuraApp && window.MishuraApp.config) {
                if (typeof window.MishuraApp.config.init === 'function') {
                    window.MishuraApp.config.init();
                    console.log('App.js: Config –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
                }
            } else {
                console.error('App.js: Config –Ω–µ –Ω–∞–π–¥–µ–Ω');
            }
        } catch (error) {
            console.error('App.js: –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ config:', error);
        }
    }
    
    function initializeUIHelpers() {
        try {
            if (window.MishuraApp && 
                window.MishuraApp.utils && 
                window.MishuraApp.utils.uiHelpers) {
                uiHelpers = window.MishuraApp.utils.uiHelpers;
                if (typeof uiHelpers.init === 'function') {
                    uiHelpers.init();
                }
                console.log('App.js: UI Helpers –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
            } else {
                console.error('App.js: UI Helpers –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
            }
        } catch (error) {
            console.error('App.js: –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ UI Helpers:', error);
        }
    }
    
    function initializeAPIService() {
        try {
            // –ò–°–ü–†–ê–í–õ–ï–ù–û: –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø—É—Ç—å –∫ API Service
            if (window.MishuraApp && 
                window.MishuraApp.services && 
                window.MishuraApp.services.api) {
                apiService = window.MishuraApp.services.api;
                if (typeof apiService.init === 'function') {
                    apiService.init();
                }
                console.log('App.js: API Service (services.api) –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            } else if (window.MishuraApp && window.MishuraApp.api) {
                // Fallback: –ø—Ä–æ–≤–µ—Ä—è–µ–º –≥–ª–æ–±–∞–ª—å–Ω—ã–π API –æ–±—ä–µ–∫—Ç
                apiService = window.MishuraApp.api;
                console.log('App.js: API Service (global api) –Ω–∞–π–¥–µ–Ω');
            } else {
                console.warn('App.js: API Service –Ω–µ –Ω–∞–π–¥–µ–Ω –Ω–∏ –≤ services, –Ω–∏ –≤ global api');
            }
        } catch (error) {
            console.error('App.js: –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ API Service:', error);
        }
    }
    
    function initializeModals() {
        try {
            if (window.MishuraApp && 
                window.MishuraApp.components && 
                window.MishuraApp.components.modals) {
                modals = window.MishuraApp.components.modals;
                if (typeof modals.init === 'function') {
                    modals.init();
                }
                console.log('App.js: Modals –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã');
            } else {
                console.error('App.js: Modals –Ω–µ –Ω–∞–π–¥–µ–Ω—ã');
            }
        } catch (error) {
            console.error('App.js: –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Modals:', error);
        }
    }
    
    function initializeImageUpload() {
        try {
            if (window.MishuraApp && 
                window.MishuraApp.components && 
                window.MishuraApp.components.imageUpload) {
                imageUpload = window.MishuraApp.components.imageUpload;
                if (typeof imageUpload.init === 'function') {
                    imageUpload.init();
                }
                console.log('App.js: Image Upload –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            } else {
                console.error('App.js: Image Upload –Ω–µ –Ω–∞–π–¥–µ–Ω');
            }
        } catch (error) {
            console.error('App.js: –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Image Upload:', error);
        }
    }
    
    function initializeConsultation() {
        try {
            if (window.MishuraApp && 
                window.MishuraApp.features && 
                window.MishuraApp.features.consultation) {
                consultation = window.MishuraApp.features.consultation;
                if (typeof consultation.init === 'function') {
                    consultation.init();
                }
                console.log('App.js: Consultation –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            } else {
                console.error('App.js: Consultation –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ features');
                
                // –î–û–ë–ê–í–õ–ï–ù–û: –ü–æ–ø—ã—Ç–∫–∞ —Å–æ–∑–¥–∞—Ç—å fallback consultation
                console.warn('App.js: –°–æ–∑–¥–∞–µ–º fallback consultation module');
                createFallbackConsultation();
            }
        } catch (error) {
            console.error('App.js: –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Consultation:', error);
            createFallbackConsultation();
        }
    }
    
    function createFallbackConsultation() {
        consultation = {
            openConsultationModal: function(mode = 'single') {
                console.log('Fallback: –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏');
                
                if (modals && typeof modals.openConsultationModal === 'function') {
                    modals.openConsultationModal();
                    
                    setTimeout(() => {
                        setModalMode(mode);
                    }, 100);
                } else {
                    console.error('Fallback: Modals –Ω–µ –Ω–∞–π–¥–µ–Ω');
                    if (uiHelpers && typeof uiHelpers.showToast === 'function') {
                        uiHelpers.showToast('–ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã');
                    } else {
                        alert('–ú–æ–¥–∞–ª—å–Ω—ã–µ –æ–∫–Ω–∞ –Ω–µ –¥–æ—Å—Ç—É–ø–Ω—ã');
                    }
                }
            },
            init: function() {
                console.log('Fallback consultation init');
            }
        };
        console.log('App.js: Fallback consultation —Å–æ–∑–¥–∞–Ω');
    }
    
    function initializeComparison() {
        try {
            if (window.MishuraApp && 
                window.MishuraApp.features && 
                window.MishuraApp.features.comparison) {
                comparison = window.MishuraApp.features.comparison;
                if (typeof comparison.init === 'function') {
                    comparison.init();
                }
                console.log('App.js: Comparison –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            } else {
                console.error('App.js: Comparison –Ω–µ –Ω–∞–π–¥–µ–Ω');
            }
        } catch (error) {
            console.error('App.js: –û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Comparison:', error);
        }
    }
    
    function setModalMode(mode) {
        console.log(`App.js: –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Ä–µ–∂–∏–º–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞: ${mode}`);
        
        const singleModeContainer = document.getElementById('single-analysis-mode');
        const compareModeContainer = document.getElementById('compare-analysis-mode');
        const dialogTitle = document.getElementById('consultation-dialog-title');
        const dialogSubtitle = document.querySelector('#consultation-overlay .dialog-subtitle');
        
        // –ò–°–ü–†–ê–í–õ–ï–ù–ò–ï: Batch DOM updates –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è layout thrashing
        requestAnimationFrame(() => {
            if (mode === 'single') {
                if (singleModeContainer) {
                    singleModeContainer.classList.remove('hidden');
                    singleModeContainer.style.display = 'block';
                }
                if (compareModeContainer) {
                    compareModeContainer.classList.add('hidden');
                    compareModeContainer.style.display = 'none';
                }
                if (dialogTitle) dialogTitle.textContent = '–ü–æ–ª—É—á–∏—Ç—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—é';
                if (dialogSubtitle) dialogSubtitle.textContent = '–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–æ—Ç–æ –æ–¥–µ–∂–¥—ã –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞';
            } else if (mode === 'compare') {
                if (singleModeContainer) {
                    singleModeContainer.classList.add('hidden');
                    singleModeContainer.style.display = 'none';
                }
                if (compareModeContainer) {
                    compareModeContainer.classList.remove('hidden');
                    compareModeContainer.style.display = 'block';
                }
                if (dialogTitle) dialogTitle.textContent = '–°—Ä–∞–≤–Ω–∏—Ç—å –æ–±—Ä–∞–∑—ã';
                if (dialogSubtitle) dialogSubtitle.textContent = '–ó–∞–≥—Ä—É–∑–∏—Ç–µ –æ—Ç 2 –¥–æ 4 —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è';
            }
        });
        
        document.dispatchEvent(new CustomEvent('modeChanged', { detail: { mode: mode } }));
        console.log(`App.js: –†–µ–∂–∏–º ${mode} —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏ —Å–æ–±—ã—Ç–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ`);
    }
    
    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∫–Ω–æ–ø–æ–∫
    function consultationButtonClickHandler(e) {
        e.preventDefault();
        console.log('App.js: –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ (single mode)');
        
        if (consultation && typeof consultation.openConsultationModal === 'function') {
            consultation.openConsultationModal('single');
        } else {
            console.error('App.js: Consultation module –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –º–µ—Ç–æ–¥ openConsultationModal –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
            if (uiHelpers && typeof uiHelpers.showToast === 'function') {
                uiHelpers.showToast('–û—à–∏–±–∫–∞: –º–æ–¥—É–ª—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
            }
        }
    }

    function compareButtonClickHandler(e) {
        e.preventDefault();
        console.log('App.js: –ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –æ–±—Ä–∞–∑–æ–≤ (compare mode)');
        
        if (consultation && typeof consultation.openConsultationModal === 'function') {
            consultation.openConsultationModal('compare');
        } else {
            console.error('App.js: Consultation module –Ω–µ –Ω–∞–π–¥–µ–Ω –∏–ª–∏ –º–µ—Ç–æ–¥ openConsultationModal –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
            if (uiHelpers && typeof uiHelpers.showToast === 'function') {
                uiHelpers.showToast('–û—à–∏–±–∫–∞: –º–æ–¥—É–ª—å –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω');
            }
        }
    }

    function setupEventHandlers() {
        console.log('App.js: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π');
        
        const consultationButton = document.getElementById('consultation-button');
        if (consultationButton) {
            if (!consultationButton.dataset.mishuraHandlerAttached) {
                consultationButton.addEventListener('click', consultationButtonClickHandler);
                consultationButton.dataset.mishuraHandlerAttached = 'true';
                console.log('App.js: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ –ù–ê–°–¢–†–û–ï–ù');
            }
        } else {
            console.warn('App.js: –ö–Ω–æ–ø–∫–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ (ID: consultation-button) –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        }
        
        const compareButton = document.getElementById('compare-button');
        if (compareButton) {
             if (!compareButton.dataset.mishuraHandlerAttached) {
                compareButton.addEventListener('click', compareButtonClickHandler);
                compareButton.dataset.mishuraHandlerAttached = 'true';
                console.log('App.js: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –ù–ê–°–¢–†–û–ï–ù');
            }
        } else {
            console.warn('App.js: –ö–Ω–æ–ø–∫–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –æ–±—Ä–∞–∑–æ–≤ (ID: compare-button) –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
        }
    }
    
    function navItemClickHandler(e) {
        e.preventDefault();
        const page = this.dataset.page;
        console.log(`App.js: –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É: ${page}`);
        
        document.querySelectorAll('.content-section').forEach(section => {
            section.classList.add('hidden');
        });
        
        const targetSection = document.getElementById(`${page}-section`);
        if (targetSection) {
            targetSection.classList.remove('hidden');
        } else {
            const homeSection = document.getElementById('home-section');
            if (homeSection) {
                homeSection.classList.remove('hidden');  
            }
            console.warn(`App.js: –°–µ–∫—Ü–∏—è ${page}-section –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø–æ–∫–∞–∑–∞–Ω–∞ home-section`);
        }
        
        document.querySelectorAll('.nav-item').forEach(navItem => navItem.classList.remove('active'));
        this.classList.add('active');
        
        document.dispatchEvent(new CustomEvent('navigationChanged', { 
            detail: { page: page } 
        }));
    }

    function setupNavigation() {
        console.log('App.js: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏');
        
        const navItems = document.querySelectorAll('.nav-item');
        navItems.forEach(item => {
            if (!item.dataset.mishuraNavHandlerAttached) {
                item.addEventListener('click', navItemClickHandler);
                item.dataset.mishuraNavHandlerAttached = 'true';
            }
        });
        console.log('App.js: –ù–∞–≤–∏–≥–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞');
    }
    
    return {
        init,
        setModalMode,
        isInitialized: () => isAppInitialized
    };
})();