// comparison.js - –ü–æ–ª–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º–∏
class ComparisonModule {
    constructor() {
        this.apiService = null;
        this.maxRetries = 4;
        this.retryDelay = 500;
        this.currentRetry = 0;
        this.isInitialized = false;
        
        // –õ–æ–≥–≥–µ—Ä
        this.logger = window.Logger || console;
    }

    async init(apiService) {
        this.apiService = apiService;
        this.logger.info('üîÑ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–æ–¥—É–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è...');
        
        // –ü—ã—Ç–∞–µ–º—Å—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏
        await this.initializeWithRetry();
    }

    async initializeWithRetry() {
        this.currentRetry++;
        this.logger.debug(`üîÑ –ü–æ–ø—ã—Ç–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ ${this.currentRetry}/${this.maxRetries} (–∑–∞–¥–µ—Ä–∂–∫–∞ ${this.retryDelay}–º—Å)`);
        
        if (await this.initializeSlots()) {
            this.isInitialized = true;
            this.logger.info('‚úÖ –ú–æ–¥—É–ª—å —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
            return;
        }
        
        if (this.currentRetry < this.maxRetries) {
            setTimeout(() => this.initializeWithRetry(), this.retryDelay);
            this.retryDelay *= 2; // –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –∑–∞–¥–µ—Ä–∂–∫—É
        } else {
            this.logger.error('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –º–æ–¥—É–ª—å —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –ø–æ—Å–ª–µ –≤—Å–µ—Ö –ø–æ–ø—ã—Ç–æ–∫');
        }
    }

    async initializeSlots() {
        this.logger.debug('üîç DEBUG: –ü–æ–∏—Å–∫ —Å–ª–æ—Ç–æ–≤ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ...');
        
        const modal = document.getElementById('consultation-overlay');
        if (!modal) {
            this.logger.debug('‚ùå –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ');
            return false;
        }
        this.logger.debug('‚úÖ –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –Ω–∞–π–¥–µ–Ω–æ');

        const compareSection = modal.querySelector('#compare-analysis-mode');
        if (!compareSection) {
            this.logger.debug('‚ùå –°–µ–∫—Ü–∏—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
            return false;
        }
        this.logger.debug('‚úÖ –°–µ–∫—Ü–∏—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –Ω–∞–π–¥–µ–Ω–∞');

        const isVisible = compareSection.offsetParent !== null;
        this.logger.debug(`üìã –°–µ–∫—Ü–∏—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –≤–∏–¥–∏–º–∞: ${isVisible}`);

        const slots = compareSection.querySelectorAll('.image-slot');
        this.logger.debug(`üîç –ù–∞–π–¥–µ–Ω–æ ${slots.length} —Å–ª–æ—Ç–æ–≤ –≤ —Å–µ–∫—Ü–∏–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è`);

        if (slots.length === 0) {
            return false;
        }

        // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π —Å–ª–æ—Ç –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º
        let successCount = 0;
        slots.forEach((slot, index) => {
            if (this.setupSlot(slot, index)) {
                successCount++;
            }
        });

        if (successCount > 0) {
            this.logger.info(`‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ ${successCount} —Å–ª–æ—Ç–æ–≤ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ`);
            return true;
        }

        return false;
    }

    setupSlot(slot, index) {
        const input = slot.querySelector('input[type="file"]');
        const previewImg = slot.querySelector('.preview-image');
        const uploadIcon = slot.querySelector('.upload-icon');

        this.logger.debug(`üîß –°–ª–æ—Ç ${index}: input=${!!input}, preview=${!!previewImg}, icon=${!!uploadIcon}`);

        if (previewImg) {
            this.logger.debug(`  üì∏ –ü—Ä–µ–≤—å—é —ç–ª–µ–º–µ–Ω—Ç: tagName=${previewImg.tagName}, className="${previewImg.className}", style.display="${previewImg.style.display}"`);
        }

        if (!input) {
            this.logger.debug(`‚ùå Input –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è —Å–ª–æ—Ç–∞ ${index}`);
            return false;
        }

        if (!previewImg) {
            this.logger.debug(`üÜï –ü—Ä–µ–≤—å—é-—ç–ª–µ–º–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω –¥–ª—è —Å–ª–æ—Ç–∞ ${index}`);
            const newPreviewImg = document.createElement('img');
            newPreviewImg.className = 'preview-image';
            newPreviewImg.style.display = 'none';
            slot.appendChild(newPreviewImg);
        }

        this.logger.debug(`üîß –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–ª–æ—Ç–∞ ${index}...`);
        this.logger.debug(`üîß DEBUG: –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–ª–æ—Ç–∞ ${index}`);

        // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º input —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —Å—Ç–∏–ª—è–º–∏
        input.style.cssText = `
            position: absolute !important;
            top: 0 !important;
            left: 0 !important;
            width: 100% !important;
            height: 100% !important;
            opacity: 0 !important;
            cursor: pointer !important;
            z-index: 10 !important;
            pointer-events: auto !important;
        `;

        // –£–±–µ–∂–¥–∞–µ–º—Å—è —á—Ç–æ –∞—Ç—Ä–∏–±—É—Ç—ã –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ
        input.accept = 'image/*';
        input.disabled = false;

        // –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ
        const newInput = input.cloneNode(true);
        input.parentNode.replaceChild(newInput, input);

        // –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–∞
        newInput.addEventListener('change', (e) => {
            const file = e.target.files[0];
            if (file) {
                this.logger.debug(`Compare —Ñ–∞–π–ª –≤—ã–±—Ä–∞–Ω –¥–ª—è —Å–ª–æ—Ç–∞ ${index}: ${file.name}`);
                this.handleFileSelection(index, file, slot);
            }
        });

        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –ø–æ —Å–ª–æ—Ç—É
        slot.addEventListener('click', (e) => {
            // –ü—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–∞–µ–º –¥–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –µ—Å–ª–∏ –∫–ª–∏–∫ –±—ã–ª –ø–æ input
            if (e.target === newInput) return;
            
            this.logger.debug(`üñ±Ô∏è –ö–ª–∏–∫ –ø–æ –≤–∏–¥–∏–º–æ–π –∫–Ω–æ–ø–∫–µ —Å–ª–æ—Ç–∞ ${index}`);
            this.logger.debug(`üñ±Ô∏è –ö–ª–∏–∫ –ø–æ —Å–ª–æ—Ç—É ${index}`);
            this.logger.debug(`üìÇ –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª–æ–≤—ã–π –¥–∏–∞–ª–æ–≥ –¥–ª—è —Å–ª–æ—Ç–∞ ${index}`);
            newInput.click();
        });

        const currentInput = slot.querySelector('input[type="file"]');
        const currentPreview = slot.querySelector('.preview-image');
        const currentIcon = slot.querySelector('.upload-icon');

        this.logger.debug(`  –°–ª–æ—Ç ${index}: input=${!!currentInput}, preview=${!!currentPreview}, icon=${!!currentIcon}`);
        this.logger.debug(`‚úÖ –°–ª–æ—Ç ${index} –Ω–∞—Å—Ç—Ä–æ–µ–Ω`);

        return true;
    }

    handleFileSelection(slotIndex, file, slot) {
        this.logger.debug(`–û–±—Ä–∞–±–æ—Ç–∫–∞ compare –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —Å–ª–æ—Ç–∞ ${slotIndex}: ${file.name}`);
        
        if (!file.type.startsWith('image/')) {
            this.logger.error(`–ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–π —Ç–∏–ø —Ñ–∞–π–ª–∞: ${file.type}`);
            return;
        }

        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø—Ä–µ–≤—å—é
        const reader = new FileReader();
        reader.onload = (e) => {
            const previewImg = slot.querySelector('.preview-image');
            if (previewImg) {
                previewImg.src = e.target.result;
                previewImg.style.display = 'block';
                slot.classList.add('filled');
                this.logger.debug(`‚úÖ –ü—Ä–µ–≤—å—é —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è —Å–ª–æ—Ç–∞ ${slotIndex}`);
                
                // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã –µ—Å–ª–∏ –∑–∞–≥—Ä—É–∂–µ–Ω–æ —Ö–æ—Ç—è –±—ã –æ–¥–Ω–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
                this.showFormElements();
                
                // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–±—ã—Ç–∏–µ –æ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
                this.notifyImageUploaded(slotIndex, file);
            }
        };
        
        reader.onerror = () => {
            this.logger.error(`–û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞ –¥–ª—è —Å–ª–æ—Ç–∞ ${slotIndex}`);
        };
        
        reader.readAsDataURL(file);
    }

    showFormElements() {
        const formElements = document.querySelector('.consultation-form-elements');
        if (formElements) {
            formElements.style.display = 'block';
            this.logger.debug('–≠–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã –ø–æ–∫–∞–∑–∞–Ω—ã');
        }
    }

    notifyImageUploaded(slotIndex, file) {
        // –°–æ–∑–¥–∞–µ–º —Å–æ–±—ã—Ç–∏–µ –¥–ª—è –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª–µ–π
        const event = new CustomEvent('compareImageUploaded', {
            detail: { slotIndex, file }
        });
        document.dispatchEvent(event);
        
        this.logger.debug(`Consultation (event compareImageUploaded): –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∑–∞–≥—Ä—É–∂–µ–Ω–æ –≤ —Å–ª–æ—Ç ${slotIndex}, —Ñ–∞–π–ª ${file.name}`);
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    getUploadedImages() {
        const modal = document.getElementById('consultation-overlay');
        if (!modal) return [];
        
        const slots = modal.querySelectorAll('#compare-analysis-mode .image-slot');
        const images = [];

        slots.forEach((slot, index) => {
            const previewImg = slot.querySelector('.preview-image');
            const input = slot.querySelector('input[type="file"]');
            
            if (previewImg && previewImg.src && previewImg.style.display !== 'none' && input && input.files[0]) {
                images.push({
                    slot: index,
                    file: input.files[0],
                    preview: previewImg.src
                });
            }
        });

        return images;
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ —Å–ª–æ—Ç–∞
    clearSlot(slotIndex) {
        const modal = document.getElementById('consultation-overlay');
        if (!modal) return;
        
        const slots = modal.querySelectorAll('#compare-analysis-mode .image-slot');
        
        if (slots[slotIndex]) {
            const slot = slots[slotIndex];
            const previewImg = slot.querySelector('.preview-image');
            const input = slot.querySelector('input[type="file"]');
            
            if (previewImg) {
                previewImg.src = '';
                previewImg.style.display = 'none';
            }
            
            if (input) {
                input.value = '';
            }
            
            slot.classList.remove('filled');
            this.logger.debug(`üóëÔ∏è –°–ª–æ—Ç ${slotIndex} –æ—á–∏—â–µ–Ω`);
        }
    }

    // –ú–µ—Ç–æ–¥ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏ –≤—Å–µ—Ö —Å–ª–æ—Ç–æ–≤
    clearAllSlots() {
        const images = this.getUploadedImages();
        images.forEach(img => this.clearSlot(img.slot));
        
        // –°–∫—Ä—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã —Ñ–æ—Ä–º—ã
        const formElements = document.querySelector('.consultation-form-elements');
        if (formElements) {
            formElements.style.display = 'none';
        }
    }

    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –∫ –æ—Ç–ø—Ä–∞–≤–∫–µ
    isReadyForAnalysis() {
        const images = this.getUploadedImages();
        return images.length >= 2; // –ú–∏–Ω–∏–º—É–º 2 –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –¥—Ä—É–≥–∏—Ö –º–æ–¥—É–ª—è—Ö
window.ComparisonModule = ComparisonModule;